{"version":3,"sources":["Components/Spotify.js","Components/Login.js","Components/DataLayer.js","Components/ActivePlaylist.js","Components/AllPlaylistBox.js","Components/Songlist.js","Components/Controller.js","Components/Player.js","Components/About.js","App.js","Components/Reducer.js","reportWebVitals.js","index.js"],"names":["loginUrl","join","Login","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","ActivePlaylist","activePlaylist","activePlaylistImage","console","log","className","src","images","url","external_urls","spotify","name","owner","display_name","SpotifyWebApi","AllPlaylistBox","playlists","dispatch","items","map","_playlist","onClick","type","playlistID","id","getPlaylist","then","playlistTracks","songlist","alt","Songlist","props","songNumber","tracks","item","index","e","changeFunc","target","track","artists","artist","styleProps","trackArtistColor","trackNameColor","activeColor","altColor","bgColor","height","sliderTrackBorderRadius","Controller","React","useState","newNumTrack","setNewNumTrack","useEffect","numTrack","token","styles","uris","uri","offset","autoPlay","Player","setNumTrack","indexValue","About","App","devices","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","user","getUserPlaylists","getMyDevices","play","playing","width","to","exact","path","component","style","color","textAlign","paddingTop","state","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a285568f.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"https://cnnrmcneil.github.io/Spotify-API-Playlist-Page/\";\r\n// const redirectUri = \"http://localhost:3000/\";\r\n\r\nconst clientId = \"9b634ab5a09f410cb628e714fb30b5b8\";\r\n\r\n// permissions requested\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return (\r\n    window.location.hash\r\n      .substring(1)\r\n      .split(\"&\")\r\n\r\n      //review reduce, pulling access token\r\n      .reduce((initial, item) => {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n        return initial;\r\n      }, {})\r\n  );\r\n};\r\n\r\n// asks for permissions when you login, defined by scopes\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport { loginUrl } from './Spotify'\r\nconst Login = () => {\r\n\r\n    return(\r\n        <div>\r\n            <a href={loginUrl}>Sign In to Spotify</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n)\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nconst ActivePlaylist = () => {\r\n    const [{ activePlaylist, activePlaylistImage }, dispatch] = useDataLayerValue()\r\n    {console.log('this is active playlist', activePlaylist)}\r\n    return(\r\n        <div className=\"active-playlist-box\"><img src={activePlaylist.images[0].url}></img>\r\n        <a href={activePlaylist.external_urls.spotify}><h5>{activePlaylist.name}</h5></a>\r\n        <a href={activePlaylist.owner.external_urls.spotify}><p>Curated by {activePlaylist.owner.display_name}</p></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivePlaylist","import React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nconst AllPlaylistBox = () => {\r\n    const [{ playlists } , dispatch] = useDataLayerValue()\r\n    return(\r\n        <div className=\"all-playlist-box\">\r\n        {playlists?.items?.map((_playlist) => {\r\n            return (\r\n        // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n        <div className=\"imageBox\"><a onClick={() => {\r\n            dispatch ({\r\n                type: \"SET_ACTIVEPLAYLIST\",\r\n                activePlaylist: _playlist\r\n            })\r\n            dispatch ({\r\n                type: \"SET_PLAYLISTID\",\r\n                playlistID: _playlist.id\r\n            })\r\n            spotify.getPlaylist(_playlist.id).then((playlistTracks) => {\r\n             dispatch({\r\n             type: \"SET_SONGLIST\",\r\n             songlist: playlistTracks,\r\n                     })\r\n            })\r\n        }}>\r\n        <img className='albumCover' src={_playlist.images[0].url} alt='albumcover'></img>\r\n        <div className=\"overlay\"><p>{_playlist.name}</p></div>\r\n        \r\n        </a>\r\n        </div>\r\n        \r\n        )})}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPlaylistBox","import React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nconst Songlist = (props) => {\r\n    const [{ songlist, playlistID, songNumber }, dispatch] = useDataLayerValue()\r\n    return(\r\n        <div className=\"songlist\" ><ol>\r\n        {console.log('this is playlistID in songlist', playlistID)}\r\n        {console.log('this is songlist in songlist', songlist)}\r\n        {songlist?.tracks?.items.map((item, index) => {\r\n            console.log('this is item', item)\r\n            return(\r\n            <div className=\"songbox\">\r\n            {console.log('this is maps songlist: ', songlist)}\r\n            <li className='songlistLi'><button value={index} onClick={(e) => {\r\n                console.log('this is index', index)\r\n                props.changeFunc(e.target.value)\r\n            }}>\r\n            </button></li><div className='songartist'><span>{item.track.name}</span><span>{item.track.artists.map((artist) => {\r\n                {return artist.name;}}).join(', ')}</span></div></div>\r\n        )})}\r\n        <div className=\"songbox\"><li className='songlistLi'></li><div className='songartist'><span>Song</span><span>Artist</span></div></div>\r\n        \r\n        </ol></div>\r\n    )\r\n}\r\n\r\nexport default Songlist","import React, { useEffect } from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyPlayer from 'react-spotify-web-playback'\r\nimport './player.css'\r\n\r\nconst styleProps = {\r\n    trackArtistColor: 'white',\r\n  trackNameColor: 'white',\r\n  activeColor: 'black',\r\n  altColor: 'black',\r\n  bgColor: 'black',\r\n  height: 100,\r\n  sliderTrackBorderRadius: 100,\r\n\r\n}\r\n\r\nconst Controller = (props) => {\r\n    const [newNumTrack, setNewNumTrack] = React.useState(0)\r\n    console.log('this is props', props)\r\n    useEffect(() => {\r\n        setNewNumTrack(props.numTrack)\r\n    }, [props])\r\nconst [{ token, activePlaylist, songNumber }, dispatch] = useDataLayerValue()\r\n    return(\r\n        <div className=\"controller\">\r\n        <SpotifyPlayer styles={styleProps}\r\n  token={token}\r\n  uris={[`${activePlaylist.uri}`]}\r\n  offset = {newNumTrack}\r\n  autoPlay = {true} />\r\n  </div>\r\n    )}\r\n\r\nexport default Controller","import React from \"react\";\r\nimport ActivePlaylist from './ActivePlaylist'\r\nimport AllPlaylistBox from './AllPlaylistBox'\r\nimport Songlist from './Songlist'\r\nimport Controller from './Controller'\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nimport './player.css'\r\n\r\nconst Player = () => {\r\nconst [numTrack, setNumTrack] = React.useState(0)\r\n\r\n    const changeFunc = (indexValue) => {\r\n        setNumTrack(indexValue)\r\n    }\r\n\r\n    const [{ activePlaylist, songlist }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div><h1 className=\"title\">Playlists</h1><div className=\"container\">\r\n        <div className=\"leftbox\">\r\n        { activePlaylist ? ( <ActivePlaylist/> ): (<div className='active-playlist-box'></div>)}\r\n        <AllPlaylistBox/>\r\n        </div>\r\n        <div className=\"rightbox\">\r\n        { songlist ? (<Songlist changeFunc={changeFunc}/>): (<div className='songlist'></div>)}\r\n        <Controller className=\"controller\" numTrack={numTrack}/>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1>Sample Header</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport Player from \"./Components/Player\";\nimport { getTokenFromUrl } from \"./Components/Spotify\";\nimport { useDataLayerValue } from \"./Components/DataLayer\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport About from \"./Components/About\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token, devices, songlist, playlistID }, dispatch] =\n    useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    console.log(\"this is _token\", _token);\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      //Get username\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      // Get a user's playlists\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n      // Get user devices\n      spotify.getMyDevices().then((devices) => {\n        dispatch({\n          type: \"SET_DEVICES\",\n          devices: devices[0],\n        });\n      });\n      //set play\n      spotify.play().then((playing) => {\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: playing,\n        });\n      });\n      // spotify.getPlaylist(playlistID).then((playlistTracks) => {\n      //   console.log('songlist called in appJS', playlistID)\n      //   dispatch({\n      //     type: \"SET_SONGLIST\",\n      //     songlist: playlistTracks,\n      //   })\n      // })\n    }\n  }, [token, dispatch]);\n\n  console.log(\"this is playlistID\", playlistID);\n  console.log(\"this is songlist\", songlist);\n  console.log(\"Token: \", token);\n  // console.log('devices are: ', devices)\n  // // console.log(\"playlists are: \" )\n  // console.log('User is: ', user);\n  // console.log('Token is: ', token);\n  console.log(devices);\n\n  return (\n    <div className=\"allBackground\">\n      <header className=\"header\">\n        <img\n          src=\".src/logoforspotifyapi.png\"\n          width=\"50px\"\n          height=\"50px\"\n          alt=\"logo\"\n        />\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <a href=\"/\" alt=\"Sign Out\">\n              {token ? (\n                <a\n                  alt=\"Sign Out\"\n                  onClick={() => {\n                    dispatch({\n                      type: \"SET_TOKEN\",\n                      token: null,\n                    });\n                  }}\n                >\n                  Sign Out\n                </a>\n              ) : (\n                <Login />\n              )}\n            </a>\n          </li>\n        </ul>\n      </header>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          component={() => {\n            return token ? (\n              <Player spotify={spotify} />\n            ) : (\n              <div>\n                <h1\n                  style={{\n                    color: \"white\",\n                    textAlign: \"center\",\n                    paddingTop: \"200px\",\n                  }}\n                >\n                  Please Login To View\n                </h1>\n              </div>\n            );\n          }}\n        />\n        <Route exact path=\"/about\" component={About} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\r\n    user: null,\r\n    playlists: [''],\r\n    playing: false,\r\n    item: null,\r\n    // token placeholder for automatic login, set to null when done\r\n    token: null,\r\n    // devices: [0],\r\n    track: null,\r\n    devices: [],\r\n    activePlaylist: '',\r\n    activePlaylistImage: '',\r\n    songlist: null,\r\n    playlistID: '',\r\n    songNumber: null\r\n}\r\n\r\nconst reducer = (state, action) => {\r\nconsole.log('Reducer at work: ', action);\r\n\r\n    switch(action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            };\r\n        case 'SET_TOKEN':\r\n            return {\r\n                ...state,\r\n                token: action.token\r\n            }\r\n        case 'SET_PLAYLISTS':\r\n            return {\r\n                ...state,\r\n                playlists: action.playlists\r\n            }\r\n        case 'SET_DEVICES':\r\n            return {\r\n                ...state,\r\n                devices: action.devices\r\n            }\r\n        case 'SET_PLAYING':\r\n            return {\r\n                ...state,\r\n                playing: action.playing\r\n            }\r\n        case 'SET_TRACK':\r\n            return {\r\n                ...state,\r\n                track: action.track\r\n            }\r\n        case 'SET_ACTIVEPLAYLIST':\r\n            return {\r\n                ...state,\r\n                activePlaylist: action.activePlaylist\r\n            }\r\n        case 'SET_ACTIVEPLAYLISTIMAGE':\r\n            return {\r\n                ...state,\r\n                activePlaylistImage: action.activePlaylistImage\r\n            }\r\n        case 'SET_SONGLIST':\r\n            return {\r\n                ...state,\r\n                songlist: action.songlist\r\n            }\r\n        case 'SET_PLAYLISTID':\r\n            return {\r\n                ...state,\r\n                playlistID: action.playlistID\r\n            }\r\n        case 'SET_SONGNUMBER':\r\n            return {\r\n                ...state,\r\n                songNumber: action.songNumber\r\n            }\r\n            default: \r\n                return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from './Components/DataLayer';\nimport reducer, { initialState } from './Components/Reducer';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to    measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}