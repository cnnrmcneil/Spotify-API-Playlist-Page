{"version":3,"sources":["Components/Spotify.js","Components/Login.js","Components/DataLayer.js","Components/ActivePlaylist.js","Components/AllPlaylistBox.js","Components/Songlist.js","Components/Controller.js","Components/Player.js","Components/About.js","Components/Default.js","App.js","Components/Reducer.js","reportWebVitals.js","index.js"],"names":["loginUrl","join","Login","href","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","ActivePlaylist","activePlaylist","activePlaylistImage","console","log","className","src","images","url","external_urls","spotify","name","owner","display_name","SpotifyWebApi","AllPlaylistBox","playlists","dispatch","items","map","_playlist","onClick","type","playlistID","id","getPlaylist","then","playlistTracks","songlist","alt","Songlist","props","songNumber","tracks","item","index","e","track","artists","artist","styleProps","trackArtistColor","trackNameColor","activeColor","altColor","bgColor","Controller","React","useState","setNewNumTrack","useEffect","numTrack","token","styles","uris","uri","offset","initialVolume","autoPlay","Player","setNumTrack","changeFunc","indexValue","About","Default","App","devices","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getMe","user","getUserPlaylists","getMyDevices","play","playing","to","exact","path","component","style","color","textAlign","paddingTop","state","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c844f72b.chunk.js","sourcesContent":["export const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\n// const redirectUri = \"https://cnnrmcneil.github.io\";\r\nconst redirectUri = \"https://cnnrmcneil.github.io/Spotify-API-Playlist-Page/\";\r\n\r\nconst clientId = \"9b634ab5a09f410cb628e714fb30b5b8\";\r\n\r\n// permissions requested\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n  \"streaming\",\r\n  \"user-read-email\",\r\n  \"user-read-private\",\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return (\r\n    window.location.hash\r\n      .substring(1)\r\n      .split(\"&\")\r\n\r\n      //review reduce, pulling access token\r\n      .reduce((initial, item) => {\r\n        var parts = item.split(\"=\");\r\n        initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n        return initial;\r\n      }, {})\r\n  );\r\n};\r\n\r\n// asks for permissions when you login, defined by scopes\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from \"react\";\r\nimport { loginUrl } from './Spotify'\r\nconst Login = () => {\r\n\r\n    return(\r\n        <div>\r\n            <a href={loginUrl}>Sign In to Spotify</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n    <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n        {children}\r\n    </DataLayerContext.Provider>\r\n)\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext)","import React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nconst ActivePlaylist = () => {\r\n    const [{ activePlaylist, activePlaylistImage }, dispatch] = useDataLayerValue()\r\n    {console.log('this is active playlist', activePlaylist)}\r\n    return(\r\n        <div className=\"active-playlist-box\"><img src={activePlaylist.images[0].url}></img>\r\n        <a href={activePlaylist.external_urls.spotify}><h5>{activePlaylist.name}</h5></a>\r\n        <a href={activePlaylist.owner.external_urls.spotify}><p>Curated by {activePlaylist.owner.display_name}</p></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivePlaylist","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nconst AllPlaylistBox = () => {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"all-playlist-box\">\r\n      {playlists?.items?.map((_playlist) => {\r\n        return (\r\n          // eslint-disable-next-line jsx-a11y/anchor-is-valid\r\n          <div className=\"imageBox\">\r\n            <a\r\n              onClick={() => {\r\n                dispatch({\r\n                  type: \"SET_ACTIVEPLAYLIST\",\r\n                  activePlaylist: _playlist,\r\n                });\r\n                dispatch({\r\n                  type: \"SET_PLAYLISTID\",\r\n                  playlistID: _playlist.id,\r\n                });\r\n                spotify.getPlaylist(_playlist.id).then((playlistTracks) => {\r\n                  dispatch({\r\n                    type: \"SET_SONGLIST\",\r\n                    songlist: playlistTracks,\r\n                  });\r\n                });\r\n              }}\r\n            >\r\n              <div className=\"overlay\">\r\n                <p>{_playlist.name}</p>\r\n              </div>\r\n              <img\r\n                className=\"albumCover\"\r\n                src={_playlist.images[0].url}\r\n                alt=\"albumcover\"\r\n              ></img>\r\n            </a>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllPlaylistBox;\r\n","import React from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\n\r\nconst spotify = new SpotifyWebApi();\r\n\r\nconst Songlist = (props) => {\r\n  const [{ songlist, playlistID, songNumber }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"songlist\">\r\n      <ol>\r\n        {console.log(\"this is playlistID in songlist\", playlistID)}\r\n        {console.log(\"this is songlist in songlist\", songlist)}\r\n        {songlist?.tracks?.items.map((item, index) => {\r\n          console.log(\"this is item\", item);\r\n          return (\r\n            <div className=\"songbox\">\r\n              {console.log(\"this is maps songlist: \", songlist)}\r\n              <li className=\"songlistLi\">\r\n                <button\r\n                  value={index}\r\n                  onClick={(e) => {\r\n                    console.log(\"this is index\", index);\r\n                    dispatch({\r\n                      type: \"SET_SONGNUMBER\",\r\n                      songNumber: index,\r\n                    });\r\n                  }}\r\n                >\r\n                  Play\r\n                </button>\r\n              </li>\r\n              <div className=\"songartist\">\r\n                <span>\r\n                  <b>{item.track.name}</b>\r\n                </span>\r\n                <span>\r\n                  {item.track.artists\r\n                    .map((artist) => {\r\n                      {\r\n                        return artist.name;\r\n                      }\r\n                    })\r\n                    .join(\", \")}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"songbox\">\r\n          <li className=\"songlistLi\"></li>\r\n          <div className=\"songartist\">\r\n            <span>Song</span>\r\n            <span>Artist</span>\r\n          </div>\r\n        </div>\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Songlist;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport \"./player.css\";\r\n\r\nconst styleProps = {\r\n  trackArtistColor: \"white\",\r\n  trackNameColor: \"white\",\r\n  activeColor: \"black\",\r\n  altColor: \"black\",\r\n  bgColor: \"black\",\r\n};\r\n\r\nconst Controller = (props) => {\r\n  const [newNumTrack, setNewNumTrack] = React.useState(0);\r\n  console.log(\"this is props\", props);\r\n  useEffect(() => {\r\n    setNewNumTrack(props.numTrack);\r\n  }, [props]);\r\n  const [{ token, activePlaylist, songNumber }, dispatch] = useDataLayerValue();\r\n  return (\r\n    <div className=\"controller\">\r\n      <SpotifyPlayer\r\n        styles={styleProps}\r\n        token={token}\r\n        uris={[`${activePlaylist.uri}`]}\r\n        offset={songNumber}\r\n        initialVolume={0.2}\r\n        autoPlay={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from \"react\";\r\nimport ActivePlaylist from './ActivePlaylist'\r\nimport AllPlaylistBox from './AllPlaylistBox'\r\nimport Songlist from './Songlist'\r\nimport Controller from './Controller'\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nimport './player.css'\r\n\r\nconst Player = () => {\r\nconst [numTrack, setNumTrack] = React.useState(0)\r\n\r\n    const changeFunc = (indexValue) => {\r\n        setNumTrack(indexValue)\r\n    }\r\n\r\n    const [{ activePlaylist, songlist }, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div><h1 className=\"title\">Playlists</h1><div className=\"container\">\r\n        <div className=\"leftbox\">\r\n        { activePlaylist ? ( <ActivePlaylist/> ): (<div className='active-playlist-box'></div>)}\r\n        <AllPlaylistBox/>\r\n        </div>\r\n        <div className=\"rightbox\">\r\n        { songlist ? (<Songlist changeFunc={changeFunc}/>): (<div className='songlist'></div>)}\r\n        <Controller className=\"controller\" numTrack={numTrack}/>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div className=\"about\">\r\n      <h1>SpotList by Connor McNeil</h1>\r\n      <h2>Accessing the the home page</h2>\r\n      <p>\r\n        If you would like to view the rest of the site, please email me your\r\n        Spotify email & display name at cnnrmcnl@gmail.com so that the Spotify\r\n        API can provide you an approved login token.\r\n      </p>\r\n      <h2>How the website functions</h2>\r\n      <img\r\n        src=\"https://i.ibb.co/YRH1Vw6/spotify-login-page.png\"\r\n        className=\"image1\"\r\n      />\r\n      <p>\r\n        Upon pressing the Sign In to Spotify button, Spotify will notify the\r\n        user of the permissions being requested and provide the user with a\r\n        token to make requests to the Spotify API\r\n      </p>\r\n      <img\r\n        src=\"https://i.ibb.co/BK4ndfY/allplaylistsandsongs.png\"\r\n        className=\"image2\"\r\n      />\r\n      <p>\r\n        On the home page, Spotify will pull the users information from your\r\n        public playlists and display them. The site also features a Web Player\r\n        that allows users to manage their songs. Context manages the playlists\r\n        and active song information, as well as storing the users token that is\r\n        used for API requests.\r\n      </p>\r\n      <p className=\"lastP\">\r\n        Thanks to{\" \"}\r\n        <a href=\"https://github.com/gilbarbara/react-spotify-web-playback\">\r\n          Gil Barbara\r\n        </a>{\" \"}\r\n        for the Spotify Web Player and{\" \"}\r\n        <a href=\"https://github.com/thelinmichael/spotify-web-api-node\">\r\n          Michael Thelin\r\n        </a>{\" \"}\r\n        for the Spotify Web API Node\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./player.css\";\r\n\r\nexport default function Default() {\r\n  return (\r\n    <div className=\"defaultPage\">\r\n      <h1>Hi, welcome to SpotLists!</h1>\r\n      <p>\r\n        Due to limitations in accessibility provided by the Spotify API, users\r\n        must be verified to access the Home page. Please see the About page for\r\n        more information.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Login from \"./Components/Login\";\nimport Player from \"./Components/Player\";\nimport { getTokenFromUrl } from \"./Components/Spotify\";\nimport { useDataLayerValue } from \"./Components/DataLayer\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport About from \"./Components/About\";\nimport Default from \"./Components/Default\";\nimport { Switch, Route, Link } from \"react-router-dom\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{ token, devices, songlist, playlistID }, dispatch] =\n    useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    let _token = hash.access_token;\n\n    console.log(\"this is _token\", _token);\n    if (_token) {\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.setAccessToken(_token);\n\n      //Get username\n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      // Get a user's playlists\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n      // Get user devices\n      spotify.getMyDevices().then((devices) => {\n        dispatch({\n          type: \"SET_DEVICES\",\n          devices: devices[0],\n        });\n      });\n      //set play\n      spotify.play().then((playing) => {\n        dispatch({\n          type: \"SET_PLAYING\",\n          playing: playing,\n        });\n      });\n      // spotify.getPlaylist(playlistID).then((playlistTracks) => {\n      //   console.log('songlist called in appJS', playlistID)\n      //   dispatch({\n      //     type: \"SET_SONGLIST\",\n      //     songlist: playlistTracks,\n      //   })\n      // })\n    }\n  }, [token, dispatch]);\n\n  console.log(\"this is playlistID\", playlistID);\n  console.log(\"this is songlist\", songlist);\n  console.log(\"Token: \", token);\n  // console.log('devices are: ', devices)\n  // // console.log(\"playlists are: \" )\n  // console.log('User is: ', user);\n  // console.log('Token is: ', token);\n  console.log(devices);\n\n  return (\n    <div className=\"allBackground\">\n      <header className=\"header\">\n        <ul>\n          <li>\n            <Link to=\"/home\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <a href=\"/home\" alt=\"Sign Out\">\n              {token ? (\n                <a\n                  alt=\"Sign Out\"\n                  onClick={() => {\n                    dispatch({\n                      type: \"SET_TOKEN\",\n                      token: null,\n                    });\n                  }}\n                >\n                  Sign Out\n                </a>\n              ) : (\n                <Login />\n              )}\n            </a>\n          </li>\n        </ul>\n      </header>\n      <Switch>\n        <Route\n          exact\n          path=\"/home\"\n          component={() => {\n            return token ? (\n              <Player spotify={spotify} />\n            ) : (\n              <div>\n                <h1\n                  style={{\n                    color: \"white\",\n                    textAlign: \"center\",\n                    paddingTop: \"200px\",\n                  }}\n                >\n                  Please Login To View\n                </h1>\n              </div>\n            );\n          }}\n        />\n        <Route exact path=\"/about\" component={About} />\n        <Route exact path=\"/Spotify-API-Playlist-Page\" component={Default} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n// hook goes here\n// const save = () => { localStorage.setItem('savedItem', item)}\n// let x = localStorage.getItem('savedItem')\n","export const initialState = {\r\n  user: null,\r\n  playlists: [\"\"],\r\n  playing: false,\r\n  item: null,\r\n  // token placeholder for automatic login, set to null when done\r\n  token: null,\r\n  // devices: [0],\r\n  track: null,\r\n  devices: [],\r\n  activePlaylist: \"\",\r\n  activePlaylistImage: \"\",\r\n  songlist: null,\r\n  playlistID: \"\",\r\n  songNumber: 0,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(\"Reducer at work: \", action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_DEVICES\":\r\n      return {\r\n        ...state,\r\n        devices: action.devices,\r\n      };\r\n    case \"SET_PLAYING\":\r\n      return {\r\n        ...state,\r\n        playing: action.playing,\r\n      };\r\n    case \"SET_TRACK\":\r\n      return {\r\n        ...state,\r\n        track: action.track,\r\n      };\r\n    case \"SET_ACTIVEPLAYLIST\":\r\n      return {\r\n        ...state,\r\n        activePlaylist: action.activePlaylist,\r\n      };\r\n    case \"SET_ACTIVEPLAYLISTIMAGE\":\r\n      return {\r\n        ...state,\r\n        activePlaylistImage: action.activePlaylistImage,\r\n      };\r\n    case \"SET_SONGLIST\":\r\n      return {\r\n        ...state,\r\n        songlist: action.songlist,\r\n      };\r\n    case \"SET_PLAYLISTID\":\r\n      return {\r\n        ...state,\r\n        playlistID: action.playlistID,\r\n      };\r\n    case \"SET_SONGNUMBER\":\r\n      return {\r\n        ...state,\r\n        songNumber: action.songNumber,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DataLayer } from './Components/DataLayer';\nimport reducer, { initialState } from './Components/Reducer';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n    <DataLayer initialState={initialState} reducer={reducer}>\n    <App />\n    </DataLayer>\n  </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to    measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}